version: "3.9"
services:
  web:
    build:
      context: ..
      dockerfile: .docker/Dockerfile
    ports:
      - 3000:3000
    environment:
      RAILS_ENV: production
      RAILS_MASTER_KEY: $RAILS_MASTER_KEY
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - internal
  redis:
    image: redis:7-alpine
    networks:
      - internal
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 1s
      timeout: 2s
      retries: 5
      start_period: 5s

  db:
    image: postgres:14-alpine3.17
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - internal
    env_file:
      - .env
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_HOST_AUTH_METHOD: md5
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 5s
      timeout: 1s
      retries: 5
      start_period: 5s

  jobs:
    build:
      context: ..
      dockerfile: .docker/Dockerfile
    environment:
      RAILS_ENV: production
      RAILS_MASTER_KEY: $RAILS_MASTER_KEY
    env_file:
      - .env
    depends_on:
      - web
      - db
      - redis
    networks:
      - internal
    entrypoint: sidekiq -C config/sidekiq.yml

volumes:
  db_data:
networks:
  internal:
